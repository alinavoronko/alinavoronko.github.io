{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Fraction","upper","lower","this","b","divisor","reduce","multiplier","result","sub","least","number1","number2","hcf","i","lcm","greatestDivisor","x","y","Math","abs","t","gcd","orderRows","arr","column","diced","count","filter","_","map","row","dice","sort","a","compare","length","j","reduceRow","index","leadingNumber","copy","isNull","divideBy","subtractRows","subtractBy","multiply","toFraction","inp","split","FractionComponent","props","fraction","className","GaussianApp","els","Array","fill","state","answer","rowsCount","nEls","setState","parsed","cloneDeep","e","calc","cpy","target","value","type","onChange","onClick","refresh","bind","el","updateElement","v-if","toString","id","gauss","v","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b1e4a36.chunk.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport './App.css';\n\nfunction gcd(x, y) {\n  if (typeof x !== \"number\" || typeof y !== \"number\") return false;\n  x = Math.abs(x);\n  y = Math.abs(y);\n  while (y) {\n    var t = y;\n    y = x % y;\n    x = t;\n  }\n  return x;\n}\n\nfunction lcm(number1, number2) {\n  let hcf;\n\n  // looping from 1 to number1 and number2 to find HCF\n  for (let i = 1; i <= number1 && i <= number2; i++) {\n    // check if is factor of both integers\n    if (number1 % i == 0 && number2 % i == 0) {\n      hcf = i;\n    }\n  }\n\n  return (number1 * number2) / hcf;\n}\n\n// Klase darbam ar daļveida skailiem\nclass Fraction {\n  // glabā skaitītāju un saucēju atsevišķi\n  constructor(upper, lower = 1) {\n    this.upper = upper;\n    this.lower = lower;\n  }\n\n  compare(b) {\n    return this.upper - b.upper;\n  }\n\n  divideBy(divisor) {\n    this.upper *= divisor.lower;\n    this.lower *= divisor.upper;\n\n    if (this.lower < 0) {\n      this.upper *= -1;\n      this.lower *= -1;\n    }\n\n    this.reduce();\n  }\n\n  multiply(multiplier) {\n    const result = new Fraction(\n      this.upper * multiplier.upper,\n      this.lower * multiplier.lower\n    );\n    result.reduce();\n    return result;\n  }\n\n  subtractBy(sub) {\n    const least = lcm(this.lower, sub.lower);\n\n    this.upper *= least / this.lower;\n    this.lower = least;\n    sub.upper *= least / sub.lower;\n\n    this.upper -= sub.upper;\n\n    this.reduce();\n  }\n\n  reduce() {\n    const greatestDivisor = gcd(this.upper, this.lower);\n    this.upper /= greatestDivisor;\n    this.lower /= greatestDivisor;\n  }\n\n  copy() {\n    return new Fraction(this.upper, this.lower);\n  }\n\n  isNull() {\n    return this.upper === 0;\n  }\n}\n\nconst dice = (arr, count) =>\n  arr\n    .filter((_, i) => i >= count)\n    .map((row) => row.filter((_, i) => i >= count));\n\n // sakārto rindas tā, ka lielākais elements kļūst par diagonāles elementu (salīdzina vienas kolonnas ietvaros)\n // tas noder tad, kad kādā rindā diagonāles elements ir nulle, bet ir vēl citas rindas (zemāk), kur šajā pozīcijā ir nenulles elements \nconst orderRows = (arr, column) => {\n  const diced = dice(arr, column);\n  diced.sort((a, b) => b[column].compare(a[column]));\n\n  for (let i = column; i < arr.length; i++) {\n    for (let j = column; j < arr[i].length; j++) {\n      arr[i][j] = diced[i - column][j - column];\n    }\n  }\n};\n\nconst reduceRow = (arr, index) => {\n  const row = arr[index];\n  const leadingNumber = row[index].copy();\n\n  if (leadingNumber.isNull()) return;\n\n  for (let i = index; i < row.length; i++) row[i].divideBy(leadingNumber);\n};\n\nconst subtractRows = (arr, index) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (i == index) continue;\n    const leadingNumber = arr[i][index].copy();\n\n    for (let j = 0; j < arr[i].length; j++) {\n      arr[i][j].subtractBy(arr[index][j].multiply(leadingNumber));\n    }\n  }\n};\n\nconst toFraction = (inp) => {\n  const [upper, lower] = inp.split(\"/\");\n  return new Fraction(+upper, lower && +lower);\n};\n\nconst FractionComponent = (props) => {\n  const { fraction } = props;\n\n  if (fraction.lower == 1) {\n    return <code>{fraction.upper}</code>;\n  }\n\n  return (\n    <code className=\"fraction\">\n      <span>{fraction.upper}</span>\n      <span>{fraction.lower}</span>\n    </code>\n  );\n};\n\nexport default class GaussianApp extends React.Component {\n  constructor(props) {\n    super(props);\n    const els = Array(2)\n      .fill(\"0\")\n      .map(() => Array(3).fill(\"0\"));\n    this.state = {\n      els,\n      answer: [],\n      rowsCount: 2,\n    };\n  }\n\n  refresh() {\n    const nEls = Array(this.state.rowsCount)\n      .fill(0)\n      .map(() => Array(this.state.rowsCount + 1).fill(0));\n\n    for (let i = 0; i < this.state.els.length && i < nEls.length; i++) {\n      for (let j = 0; j < this.state.els[i].length && j < nEls[i].length; j++) {\n        nEls[i][j] = this.state.els[i][j];\n      }\n    }\n\n    this.setState({ els: nEls });\n  }\n\n  \n  //Sagatavo datus\n  gauss() {\n    const cpy = _.cloneDeep(this.state.els);\n    const parsed = cpy.map((e) => e.map(toFraction));\n    const answer = this.calc(parsed);\n\n    this.setState({ answer });\n  }\n\n  //Galvenā loģika\n  /*Rekursīve funkcija, darbojas pa diagonāli*/ \n  calc(arr, i = 0) {\n    if (arr.length == i) {\n      return arr;\n    }\n// Sakārto rindas\n    orderRows(arr, i);\n// Izdala rindu ar skaitli tā, lai diagonāles elements būtu 1\n    reduceRow(arr, i);\n // Saveido nulles virs un zem diagonāles elementa\n    subtractRows(arr, i);\n\n    return this.calc(arr, i + 1);\n  }\n\n  updateElement(e, i, j) {\n    const cpy = _.cloneDeep(this.state.els);\n    cpy[i][j] = e.target.value;\n    this.setState({ els: cpy });\n  }\n\n  render() {\n    const { els, answer } = this.state;\n\n    return (\n      <div className=\"container\">\n        <span>\n          Ievadiet koeficientu, piemēram, <code>123 vai 12/3</code>\n        </span>\n        <br />\n        Rindu skaits:{\" \"}\n        <input\n          type=\"number\"\n          value={this.state.rowsCount}\n          onChange={(e) => this.setState({ rowsCount: +e.target.value })}\n        />\n        <button\n          className=\"btn btn-sm btn-secondary\"\n          onClick={this.refresh.bind(this)}\n        >\n          Atjaunot\n        </button>\n        <br />\n        <table>\n          <tbody>\n            {els.map((e, j) => (\n              <tr key={j.toString()}>\n                {e.map((el, i) => (\n                  <td key={i.toString()}>\n                    <div className=\"input-group mb-3\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={this.state.els[j][i]}\n                        onChange={(e) => this.updateElement(e, j, i)}\n                      />\n                      {i !== e.length - 1 && (\n                        <span v-if=\"\" className=\"input-group-text\">\n                          x<sub>{i}</sub>\n                        </span>\n                      )}\n                    </div>\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <button\n          id=\"activate\"\n          className=\"btn btn-sm btn-warning\"\n          onClick={() => this.gauss()}\n        >\n         Aprēķināt\n        </button>\n        <br />\n        <br />\n        <div id=\"output\">\n          <table className=\"table border-left border-right rounded-circle\">\n            <tbody>\n              {answer.map((row, i) => (\n                <tr key={i.toString()}>\n                  {row.map((v, j) => (\n                    <td key={j.toString()}>\n                      <FractionComponent fraction={v} />\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <footer>\n         <span className=\"copyright\"> &copy; Alina Voroņko, av20099, 1.kursa studente </span>\n        </footer>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}